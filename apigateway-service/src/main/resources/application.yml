# ---------------------------------
# server / application
# ---------------------------------
server:
  port: 8080
  shutdown: graceful

application:
  title: ${spring.application.name}
  version: 1.0.0
  lastdate: 2024-09-03

# ---------------------------------
# spring
# ---------------------------------
spring:
  application:
    name: apigatewayservice
  lifecycle:
    timeout-per-shutdown-phase: 20s
# ---------------------------------
# spring-gateway
# ---------------------------------
  cloud:
    gateway:
      default-filters:
        - name: GlobalHeaderFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
        - name: LoggingFilter
          args:
            baseMessage: Spring Cloud Logging Filter
            preLogger: true
            postLogger: true

      routes:
        - id: user-service
          uri: lb://USER-SERVICE  # eureka에 등록된 Application명
          predicates:   # 요청데이터
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - AuthorizationHeaderFilter
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates:
            - Path=/first-service/**
          filters:
            - AddRequestHeader=first-request, first-request-header-by-yaml
            - AddResponseHeader=first-response, first-response-header-from-yaml
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
            - AddRequestHeader=second-request, second-request-header-by-yaml
            - AddResponseHeader=second-response, second-response-header-from-yaml
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

#logging:
#  config: classpath:log4j2.xml

# ---------------------------------
# eureka
# ---------------------------------
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

